.order-item{
    display: grid;
    grid-template-columns: 0.5fr 2fr 1fr 1fr 1fr;
    align-items: start;
    gap: 30px;
    padding: 20px;
    border: 1px solid tomato;
    margin: 15px 0px;
    font-size: 14px ;
    color: #505050;
}
.order-list{
    display: flex;
    flex-direction: column-reverse
}
.order-item-food, .order-item-name{
font-weight: 600;
}
.order-item-name{
    margin-top: 10px;
    margin-bottom: 5px;
}
.order-item-add{
    margin-bottom: 10px;
}
.order-item select{
    background-color: #ffe8e4;
    border: 1px solid tomato;
    width: 120px;
    padding: 10px;
    outline: none;
}
.delivery-email{
    padding: 2px 4px;
    outline: none;
    border: 1px solid;
    font-size: 14px;
    width: 100%;
    margin: 5px 0px;
    margin-top: 10px;
    border-radius: 4px;
}
.delivery-btn{
    padding: 2px 5px;
    background-color: tomato;
    border: none;
    border-radius: 4px;
    color: white;
    font-size: 14px;
    cursor: pointer;
}
@media (max-width:900px) {
    .order-item{
       gap: 10px;
       padding: 10px;
    }
     .order-item select{
        padding: 5px;
        font-size: 12px;
        width: 90px;
    }
}
@media (max-width:730px) {
    .order-item{
        font-size: 12px;
        grid-template-columns: 0.5fr 2fr 1fr;
    }
    .order-item select{
        padding: 5px;
        font-size: 12px;
        width: 80px;
    }
    .order-item img{
        width: 40px;
    }
    .delivery-email{
        font-size: 12px;
        }
.delivery-btn{

font-size: 12px;}
   .order-item{
    margin: 10px 0px;
    width: 100%;
   }
}
@media (max-width:490px){
    .order-item{
        font-size: 10px;
        grid-template-columns: 0.5fr 2fr 1fr;
        gap: 3px;
    }
    .order-item img{
        width: 25px;
    }
    .order-item select{
        padding: 3px;
        font-size: 10px;
        width: 70px;
    }
.delivery-btn{

font-size: 11px;
}
.delivery-email{
font-size: 10px;
width: 100%;
padding: 2px 4px;
margin-top: 0px;
}

} 
@media (max-width:330px){
.order-item{
    width: 243px;
}
}
/*  const handleSubmit = async (event) => {
    if (event) {
      event.preventDefault();
    }

    const totalAmount = getTotalCartAmount();
    const gst = Math.round(totalAmount * 0.03);
    const restaurantCharges = 10;
    const deliveryCharges = 50;
    const platformFee = 10;
    let discount = 0;

    // Apply discount based on discount codes
    if (discountCode10.toUpperCase() === '10OFF') {
      discount = 10;
    } else if (discountCode20.toUpperCase() === '20OFF') {
      discount = 20;
    }
  const billDetails = {
      totalAmount: totalAmount,
      gst: gst,
      discount: discount,
      restaurantCharges: restaurantCharges,
      deliveryCharges: deliveryCharges,
      platformFee: platformFee,
      totalPay: totalAmount + gst + restaurantCharges + deliveryCharges + platformFee, // Subtract discount from totalPay
      discountedprice:discountedAmount,
    };
    try {
      await axios.post('http://localhost:5000/api/bill/sendBill', { billDetails, userEmail: data.email });
      toast.success('Bill has been sent to your email!');
      placeOrder();
    } catch (error) {
      console.error('Error sending bill:', error);
      toast.error('Error in sending bill.');
    }
  };*/